{"version":3,"sources":["modules/App/App.style.js","modules/App/App.js","reportWebVitals.js","theme.js","fonts.js","index.js"],"names":["makeStyles","theme","canvas","controls","padding","display","justifyContent","alignItems","flexDirection","Phi","Math","sqrt","goldenAngle","THREE","degToRad","Flower","leafProps","leafs","mesh","useRef","ref","Array","fill","map","_","index","rotation","Leaf","initX","initY","width","height","hue","props","cp11X","cp11Y","cp12X","cp12Y","cp21X","cp21Y","cp22X","cp22Y","heartShape","useMemo","moveTo","bezierCurveTo","lineTo","color","items","scheme","ColorScheme","from_hue","distance","variation","console","log","colors","floor","random","length","attach","args","depth","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","App","classes","useStyles","useState","setWidth","setHeight","setHue","setLeafs","CssBaseline","className","Typography","gutterBottom","Slider","defaultValue","step","value","onChange","e","min","max","valueLabelDisplay","camera","position","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","createMuiTheme","shape","borderRadius","shadows","palette","type","primary","main","contrastText","secondary","tertiary","background","paper","default","brandText","iconColor","typography","fontFamily","join","overrides","MuiInputBase","input","MuiDrawer","paperAnchorDockedLeft","borderRight","MuiDialog","borderTop","MuiStepLabel","iconContainer","MuiDialogActions","root","MuiListItem","margin","MuiGrid","item","willChange","MuiTouchRipple","child","backgroundColor","MuiListItemIcon","minWidth","MuiButton","fontWeight","lineHeight","outlinedPrimary","MuiTab","MuiAvatar","colorDefault","border","MuiTypography","h5","MuiSnackbar","maxWidth","defaultFonts","a","WebFont","google","families","fonts","ReactDOM","render","ThemeProvider","document","getElementById","bootstrap"],"mappings":"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","file":"static/js/main.28edbf9d.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\ncanvas:{\r\n},\r\ncontrols:{\r\n    padding: \"40px\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    alignItems:\"center\",\r\n    flexDirection:\"column\"\r\n}\r\n}));\r\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport React, { useRef, useState, useMemo } from \"react\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\nimport {Slider,Divider,Typography} from '@material-ui/core';\r\nimport palettes from \"nice-color-palettes\";\r\nimport ColorScheme from \"color-scheme\";\r\n\r\nimport five from \"../../assets/five.jpg\";\r\n\r\nimport useStyles from \"./App.style\";\r\n\r\nconst Phi = (1+Math.sqrt(5))/2;\r\nconst goldenAngle = THREE.Math.degToRad(360 - (360/Phi));\r\nconst getRandom =(items) =>items[Math.floor(Math.random() * items.length)];\r\n\r\n/*\r\nvar mouseDown = false,\r\n        mouseX = 0,\r\n        mouseY = 0;\r\n\r\n    function onMouseMove(evt) {\r\n        if (!mouseDown) {\r\n            return;\r\n        }\r\n\r\n        evt.preventDefault();\r\n\r\n        var deltaX = evt.clientX - mouseX,\r\n            deltaY = evt.clientY - mouseY;\r\n        mouseX = evt.clientX;\r\n        mouseY = evt.clientY;\r\n        rotateScene(deltaX, deltaY);\r\n    }\r\n\r\n    function onMouseDown(evt) {\r\n        evt.preventDefault();\r\n\r\n        mouseDown = true;\r\n        mouseX = evt.clientX;\r\n        mouseY = evt.clientY;\r\n    }\r\n\r\n    function onMouseUp(evt) {\r\n        evt.preventDefault();\r\n\r\n        mouseDown = false;\r\n    }\r\n\r\n    function addMouseHandler(canvas) {\r\n    canvas.addEventListener('mousemove', function (e) {\r\n        onMouseMove(e);\r\n    }, false);\r\n    canvas.addEventListener('mousedown', function (e) {\r\n        onMouseDown(e);\r\n    }, false);\r\n    canvas.addEventListener('mouseup', function (e) {\r\n        onMouseUp(e);\r\n    }, false);\r\n}\r\n\r\n    function rotateScene(deltaX, deltaY) {\r\n    root.rotation.y += deltaX / 100;\r\n    root.rotation.x += deltaY / 100;\r\n}\r\n*/\r\nconst Box = (props) => {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n\r\n  // Set up state for the hovered and active state \r\n  const [active, setActive] = useState(false);\r\n\r\n  // Rotate mesh every frame, this is outside of React without overhead\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\r\n  });\r\n\r\n  const texture = useMemo(() => new THREE.TextureLoader().load(five), []);\r\n\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? [2, 2, 2] : [1.5, 1.5, 1.5]}\r\n      onClick={(e) => setActive(!active)}\r\n    >\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshBasicMaterial attach=\"material\" transparent side={THREE.DoubleSide}>\r\n        <primitive attach=\"map\" object={texture} />\r\n      </meshBasicMaterial>\r\n    </mesh>\r\n  );\r\n}\r\n\r\nconst Flower = ({leafProps,leafs})=>{\r\n  const mesh = useRef();\r\n\r\n\r\n  return(\r\n    <group      ref={mesh}>\r\n      {Array(leafs).fill('').map((_,index)=>{\r\n   \r\n        const rotation = new THREE.Euler( 0, 0,goldenAngle*(index+1))\r\n        return (\r\n\r\n        <Leaf rotation={rotation} {...leafProps}></Leaf>\r\n\r\n      )})}\r\n    </group>\r\n  )\r\n}\r\nconst Leaf = ({initX=0,initY=0,width, height,rotation,hue,...props}) => {\r\n  // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n\r\n  const extrudeSettings =  { depth: 8, bevelEnabled: true, bevelSegments: 2, steps: 2, bevelSize: 1, bevelThickness: 1 };\r\n\r\n  const cp11X = initX - width/2\r\n  const cp11Y = initY;\r\n  const cp12X = initX - width/2;\r\n  const cp12Y = initY + height*0.6;\r\n\r\n  const cp21X = initX + width/2;\r\n  const cp21Y = initY + height*0.6;\r\n  const cp22X = initX + width/2;\r\n  const cp22Y = initY;\r\n\r\n  const heartShape =  useMemo(()=>new THREE.Shape() \r\n  .moveTo( initX , initY  )\r\n  .bezierCurveTo( cp11X,cp11Y,cp12X,cp12Y,initX,initY + height)\r\n  .lineTo( initX,initY + height)\r\n  .bezierCurveTo( cp21X,cp21Y,cp22X,cp22Y,initX,initY),[width,height,initX,initY])\r\n\r\n  const color = useMemo(()=>{\r\n    const scheme = new ColorScheme;\r\n    scheme.from_hue(hue)         \r\n          .scheme('analogic')\r\n          .distance(0.05)    \r\n          .variation('soft');\r\n          console.log(scheme)\r\n    return \"#\"+getRandom(scheme.colors())\r\n  },[hue])\r\n  return (\r\n    <group rotation={rotation}>\r\n      <mesh\r\n        {...props}\r\n        ref={mesh}\r\n      > (\r\n        <extrudeBufferGeometry  attach=\"geometry\"  args={[heartShape,extrudeSettings]}/>)\r\n          <meshPhongMaterial color={ color} />\r\n    \r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [width,setWidth] = useState(50)\r\n  const [height,setHeight] = useState(100)\r\n  const [hue,setHue] = useState(220)\r\n  const [leafs,setLeafs] = useState(20)\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.controls}>\r\n      <Typography  gutterBottom>\r\n        Width\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={width}\r\n        step={1}\r\n        value={width}\r\n        onChange={(e,value)=>setWidth(value)}\r\n        min={1}\r\n        max={100}\r\n        valueLabelDisplay=\"auto\"\r\n      />\r\n        <Typography  gutterBottom>\r\n        Height\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={height}\r\n        step={1}\r\n        value={height}\r\n        onChange={(e,value)=>setHeight(value)}\r\n        min={1}\r\n        max={100}\r\n        valueLabelDisplay=\"auto\"\r\n      />\r\n      <Typography  gutterBottom>\r\n        Leafs\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={leafs}\r\n        step={1}\r\n        value={leafs}\r\n        onChange={(e,value)=>setLeafs(value)}\r\n        min={1}\r\n        max={30}\r\n        valueLabelDisplay=\"auto\"\r\n      />\r\n              <Typography  gutterBottom>\r\n        Hue\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={hue}\r\n        step={1}\r\n        value={hue}\r\n        onChange={(e,value)=>setHue(value)}\r\n        min={1}\r\n        max={360}\r\n        valueLabelDisplay=\"auto\"\r\n      />\r\n      </div>\r\n\r\n      <Canvas camera={{ position: [0, 0, 300] }} className={classes.canvas}>\r\n        <ambientLight intensity={0.5} />\r\n        <Flower leafs={leafs} leafProps={\r\n          {\r\n            width,\r\n           height,\r\n           hue,\r\n          }\r\n        }></Flower>\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst defaults = createMuiTheme();\r\n\r\nexport default createMuiTheme({\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n\r\n  shadows: [...defaults.shadows, `0px 0px 50px 10px rgba(0,0,0,0.3)`],\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#3E8DDD\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      main: \"#332E48\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    tertiary: {\r\n      main: \"#41E8ED\",\r\n      contrastText: \"#000000\",\r\n    },\r\n    background: {\r\n      paper: \"#272337\",\r\n      default: \"#1e1a2c\",\r\n    },\r\n    brandText: {\r\n      main: \"#BFBAD3\",\r\n    },\r\n    iconColor: {\r\n      main: \"#41E8ED\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Abel\"].join(\",\"),\r\n  },\r\n  overrides: {\r\n    MuiInputBase: {\r\n      input: {\r\n        padding: \"12.5px 15px\",\r\n      },\r\n    },\r\n    MuiDrawer: {\r\n      paperAnchorDockedLeft: {\r\n        borderRight: \"none\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paper: {\r\n        borderTop: \"2px solid #3E8DDD\",\r\n      },\r\n    },\r\n    MuiStepLabel: {\r\n      iconContainer: {\r\n        position: \"relative\",\r\n      },\r\n    },\r\n    MuiDialogActions: {\r\n      root: {\r\n        background: \"#332E48\",\r\n        justifyContent: \"center\",\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        width: \"90%\",\r\n        margin: \"auto\",\r\n      },\r\n    },\r\n    MuiGrid: {\r\n      item: {\r\n        willChange: \"transform\",\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"#3E8DDD\",\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        minWidth: \"35px\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        fontWeight: \"bold\",\r\n        lineHeight: \"2.0\",\r\n      },\r\n      outlinedPrimary: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      colorDefault: {\r\n        border: \"dashed #41e8ed5e 2px\",\r\n        color: \"#41e8ed5e\",\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      h5: {\r\n        fontWeight: \"700\",\r\n      },\r\n    },\r\n    MuiSnackbar: {\r\n      root: {\r\n        maxWidth: \"700px\",\r\n      },\r\n    },\r\n  },\r\n});\r\n","const defaultFonts = [\"Abel\", \"Montserrat:300,400,700,800,900\"];\r\nexport default defaultFonts;\r\n","\nimport * as WebFont from \"webfontloader\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { App } from \"modules\";\n\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/global.scss\";\nimport theme from \"./theme\";\nimport fonts from \"./fonts\";\n\nconsole.log(\"🍪\");\nconst bootstrap = async () => {\n  console.log(theme, \"theme\");\n\n  WebFont.load({\n    google: {\n      families: fonts,\n    },\n  });\n  ReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n  );\n};\n\nbootstrap();\nreportWebVitals();"],"sourceRoot":""}